<?php $status = $this->getLoggingStatus(); ?>
<?php if ($status['enabled']): ?>
<div class="emaildirect-status">
	<table>
	<tr id='ed_status_row'>
	<td>Logging: <span id='status_state'>Enabled</span></td>
	<td>Started On: <span><?php echo $status['start_date'] ?></span></td>
	<td>Duration: <span><?php echo $status['duration_display'] ?></span></td>
	<td>Time Remaining: <span id='ed_time_remaining'></span></td>
	</tr>
	</table>
</div>

<script type='text/javascript'>

var FORM_KEY = "<?php echo $this->getFormKey();?>";

function getStatus()
{
	new Ajax.Request('<?php echo $this->getUrl('ed_integration/admin_troubleshooting/ajax') ?>',
	{
		parameters: {isAjax: 'true', form_key: FORM_KEY, method: "status"},
		loaderArea : false,
		onSuccess: function(transport)
		{
			try 
			{
				if (transport.responseText.isJSON())
				{
					var response = transport.responseText.evalJSON()
					if (response.error)
					{
						alert(response.message);
					}
					if(response.ajaxExpired && response.ajaxRedirect)
					{
						setLocation(response.ajaxRedirect);
					}
					
					var status = response.status;
					
					if (status.enabled)
					{
						$("status_state").update("Enabled");
						
						seconds = status.duration - status.seconds;
						
						statusCounter.setSeconds(seconds);
						statusCounter.start();
						$('status').value = "yes";
					}
					else
					{
						$("status_state").update("Disabled");
						$("ed_status_row").addClassName("disabled");
						$('status').value = "no";
					}
				}
			}
			catch (e)
			{
				//showOutput(transport.responseText);
			}
		}
	});
}

function Countdown(options)
{
	var timer,
	instance = this,
	seconds = options.seconds || 10,
	updateStatus = options.onUpdateStatus || function () {},
	counterEnd = options.onCounterEnd || function () {};
	
	this.setSeconds = function(new_seconds)
	{
		options.seconds = new_seconds;
	}

	function decrementCounter()
	{
		//console.log(statusCounter.seconds);
		updateStatus(seconds);
		
		if (seconds === 0)
		{
			counterEnd();
			instance.stop();
			getStatus();
		}
		seconds--;
	}
	
	this.start = function ()
	{
		clearInterval(timer);
		timer = 0;
		seconds = options.seconds;
		timer = setInterval(decrementCounter, 1000);
	};
	
	this.stop = function ()
	{
		clearInterval(timer);
	};
}

var statusCounter = new Countdown(
{
	seconds:<?php echo $status['duration'] - $status['seconds'] ?>,
 	onUpdateStatus: function(sec)
 	{
		var delta = Math.abs(sec);

		// calculate (and subtract) whole days
		var days = Math.floor(delta / 86400);
		delta -= days * 86400;
		
		// calculate (and subtract) whole hours
		var hours = Math.floor(delta / 3600) % 24;
		delta -= hours * 3600;
		
		// calculate (and subtract) whole minutes
		var minutes = Math.floor(delta / 60) % 60;
		delta -= minutes * 60;
		
		// what's left is seconds
		var seconds = delta % 60;
		
 		var display = "";
 		
 		if (days > 0)
 		{
 			display += " " + days + " day";
 			if (days != 1)
 				display += "s";
 		}
 		
 		if (hours > 0)
 		{
 			display += " " + hours + " hour";
 			if (hours != 1)
 				display += "s";
 		}
 		
 		if (minutes > 0)
 		{
 			display += " " + minutes + " minute";
 			if (minutes != 1)
 				display += "s";
 		}
 		
 		display += " " + seconds + " second";
 		
 		if (seconds != 1)
 			display += "s";
 		
 		$('ed_time_remaining').update(display);
 	}
});

statusCounter.start();

var last_focus = 0;

function onBlur()
{
	console.log('window blur');
};
function onFocus()
{
	if (last_focus != 0)
	{
		var current_time = new Date().getTime();
		if (current_time - last_focus > 60000)
		{
			last_focus = current_time;
			getStatus();
		}
	}
	else
		last_focus = new Date().getTime();
};

if (/*@cc_on!@*/false)
{ // check for Internet Explorer
	document.onfocusin = onFocus;
	//document.onfocusout = onBlur;
}
else
{
	window.onfocus = onFocus;
	//window.onblur = onBlur;
}

</script>

<?php endif; ?>